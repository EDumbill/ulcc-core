{"name":"EPrints for Deployments","tagline":"ULCC deployment of EPrints 3.3 branch","body":"ulcc-core was originally developed at the University of London Computer Centre http://www.ulcc.ac.uk/ and is the basis for all of ULCC's EPrints-based services. ulcc-core is a fork of https://github.com/eprints/eprints/tree/3.3 - currently the active EPrints development branch.\r\n\r\n## Aim\r\n\r\nThe aim of ulcc-core is to provide a deployment-ready codebase for EPrints that has a number of useful Bazaar modules already pre-installed. One of the (interesting?) features of ulcc-core is that configuration files in lib/defaultcfg are automatically loaded - this means that (a) the repository-level configuration can be very minimal as most settings are inherited from lib/defaultcfg and (b) any changes to lib/defaultcfg (for example as the result of a new EPrints release) are automatically inherited by all repositories.\r\n\r\n## How to Contribute\r\n\r\nPlease see eprintsug.github.io\r\n\r\n## Deployment\r\n\r\nAssuming you want to deploy ulcc-core into /opt/eprints3:\r\n\r\n```\r\ncd /opt\r\nmkdir eprints3\r\nchown eprints:eprints eprints3\r\nchmod 02775 eprints3\r\ncd eprints3\r\nsu eprints\r\ngit clone https://github.com/eprintsug/ulcc-core.git .\r\ncp perl_lib/EPrints/SystemSettings.pm.ulcc perl_lib/EPrints/SystemSettings.pm\r\n```\r\n\r\nEdit SystemSettings.pm to suit - usually this just means adding the appropriate user and group.\r\n\r\nPull in the pre-installed Bazaar modules:\r\n\r\n```\r\ngit submodule init\r\ngit submodule update\r\n```\r\n\r\nTo create a repository, first fork https://bitbucket.org/ulcc-art/ulcc-skel, then:\r\n\r\n```\r\ncd archives\r\ngit clone https://bitbucket.org/your/fork\r\n```\r\n\r\nYour new repository will contain a minimal set of configuration files which you should now edit to suit your requirements:\r\n\r\n```\r\ntree archives/foo\r\n archives/foo/\r\n ├── bin\r\n │   └── nightly.sh # schedule this to run nightly via cron\r\n ├── cfg\r\n │   ├── cfg.d\r\n │   │   ├── 10_core.pl # hostname of repository\r\n │   │   ├── adminemail.pl # repository administrator email address\r\n │   │   └── database.pl # db connection details (use 'bin/epadmin config_db foo' to change if preferred)\r\n │   └── lang\r\n │       └── en\r\n │           └── phrases\r\n │               └── archive_name.xml # repository name\r\n ├── documents\r\n │   └── disk0\r\n ├── html\r\n └── var\r\n```\r\n\r\nTo get everything up and running:\r\n\r\n```\r\ncd /opt/eprints3\r\nbin/epadmin create_db foo\r\nbin/import_subjects foo lib/defaultcfg/subjects\r\nbin/epadmin create_user foo # create a user called 'admin'\r\ntestdata/bin/import_test_data foo archive admin\r\nbin/generate_apacheconf --replace --system\r\n```\r\n\r\nFollow the instructions given by generate_apacheconf for adding EPrints to your global Apache configuration, then finally (re)start Apache.\r\n\r\n### Enabling Bazaar Modules ### \r\n\r\nIn most cases, plugins can be enabled with 2 steps, for example:\r\n\r\n````\r\ntools/epm link_lib bootstrap\r\ntools/epm enable foo bootstrap\r\n````\r\n\r\nSome plugins require additional steps - see below.\r\n\r\n**RIOXX2 and Recollect**\r\n\r\nBoth of these expect to find a workflow file archives/foo/cfg/workflows/eprint/default.xml - the ulcc-skel repository does not provide this file so do the following before enabling:\r\n\r\n````\r\nmkdir -p archives/blank/cfg/workflows/eprint/\r\ncp lib/defaultcfg/workflows/eprint/default.xml archives/blank/cfg/workflows/eprint/\r\n````\r\n\r\n**MePrints**\r\n\r\nMePrints expects to find 2 workflow files: archives/foo/cfg/workflows/eprint/default.xml and archives/foo/cfg/workflows/user/default.xml - the ulcc-skel repository does not provide these files so do the following before enabling:\r\n\r\n````\r\nmkdir -p archives/blank/cfg/workflows/eprint/\r\nmkdir -p archives/blank/cfg/workflows/user/\r\ncp lib/defaultcfg/workflows/eprint/default.xml archives/blank/cfg/workflows/eprint/\r\ncp lib/defaultcfg/workflows/user/default.xml archives/blank/cfg/workflows/user/\r\n````\r\n\r\n## ULCC Deployment\r\n\r\nThe steps that ULCC use for deploying ulcc-core on staging and production servers.\r\n\r\nRHEL5 servers may not have the required SSL CAs for github: if you see an SSL certificate error prefix the git command with \"env GIT_SSL_NO_VERIFY=true\", for example:\r\n\r\nenv GIT_SSL_NO_VERIFY=true git clone https://github.com/eprintsug/ulcc-core.git .\r\n\r\n### Staging\r\n\r\nAfter requesting DNS name for staging service, define staging service in Wumpus and deploy to staging server (see internal ULCC documentation).\r\n\r\nRun the following on the staging server:\r\n\r\n```\r\ncd /www/foo-test\r\nmkdir eprints3\r\nchown eprints:eprints eprints3\r\nchmod 02775 eprints3\r\ncd eprints3\r\nsu foo\r\ngit clone https://github.com/eprintsug/ulcc-core.git .\r\ncp perl_lib/EPrints/SystemSettings.pm.ulcc perl_lib/EPrints/SystemSettings.pm\r\nvim perl_lib/EPrints/SystemSettings.pm # set user and group to 'foo'\r\ngit submodule init\r\ngit submodule update\r\n```\r\n\r\nTo deploy the repository configuration from bitbucket you need to create an ssh key and add it to bitbucket as a Deployment Key https://confluence.atlassian.com/bitbucket/use-deployment-keys-294486051.html:\r\n\r\n```\r\nssh-keygen # if keys not already generated\r\ncat /u/web/foo/.ssh/id_rsa.pub # copy to bitbucket\r\n```\r\n\r\nThe deployment key should then let you checkout the repository configuration:\r\n\r\n```\r\ncd archives\r\ngit clone git@bitbucket.org:ulcc-art/foo.git footest\r\n```\r\n\r\nThe repository configuration should contain production settings so override these with settings suitable for staging:\r\n\r\n```\r\ncd cfg/cfg.d\r\ncp 10_core.pl 10_core_test.pl # set staging hostname\r\ncp database.pl database_test.pl # set staging db name, user and password\r\n```\r\n\r\nEnable required Bazaar modules:\r\n\r\n```\r\ncd /www/foo-test/eprints3\r\nfor epm in $(ls archives/footest/cfg/epm); do tools/epm link_lib $epm; done\r\ntools/epm link_lib pirus # always enable IRUS\r\ntools/epm link_lib meprints # if irstats enabled without meprints (to prevent warnings)\r\n```\r\n\r\nGet up and running:\r\n\r\n```\r\nbin/epadmin create_db footest\r\nbin/generate_apacheconf\r\nbin/epadmin footest # final sanity check\r\n/scripts/mapachectl2 restart FOO-test # restart apache for 'foo' staging service\r\n```\r\n\r\n### Production\r\n\r\nAfter requesting DNS name for production service, define production service in Wumpus and deploy to production server (see internal ULCC documentation).\r\n\r\nRun the following on the production server:\r\n\r\n```\r\ncd /www/foo\r\nmkdir eprints3\r\nchown eprints:eprints eprints3\r\nchmod 02775 eprints3\r\ncd eprints3\r\nsu foo\r\ngit clone https://github.com/eprintsug/ulcc-core.git .\r\ncp perl_lib/EPrints/SystemSettings.pm.ulcc perl_lib/EPrints/SystemSettings.pm\r\nvim perl_lib/EPrints/SystemSettings.pm # set user and group to 'foo'\r\ngit submodule init\r\ngit submodule update\r\n```\r\n\r\nTo deploy the repository configuration from bitbucket you need to create a key pair and add the public to bitbucket as a Deployment Key https://confluence.atlassian.com/bitbucket/use-deployment-keys-294486051.html:\r\n\r\n```\r\nssh-keygen # if keys not already generated\r\ncat /u/web/foo/.ssh/id_rsa.pub # copy to bitbucket\r\n```\r\n\r\nThe deployment key should then let you checkout the repository configuration:\r\n\r\n```\r\ncd archives\r\ngit clone git@bitbucket.org:ulcc-art/foo.git foo\r\n```\r\n\r\nEnable required Bazaar modules:\r\n\r\n```\r\ncd /www/foo/eprints3\r\nfor epm in $(ls archives/foo/cfg/epm); do tools/epm link_lib $epm; done\r\ntools/epm link_lib meprints # if irstats enabled without meprints (to prevent warnings)\r\ntools/epm link_lib pirus # always enable IRUS\r\n```\r\n\r\nGet up and running:\r\n\r\n```\r\nbin/epadmin create_db foo\r\nbin/generate_apacheconf\r\nbin/epadmin footest # final sanity check\r\n/scripts/mapachectl2 restart FOO # restart apache for 'foo' production service\r\n```\r\n\r\n## Contributing to ulcc-core\r\n\r\n### Adding new plugins ###\r\n\r\n```\r\ngit submodule add http://github.com/eprintsug/foo lib/epm/foo\r\ngit status # should show changes to .gitmodules and lib/epm/foo\r\ngit commit -am \"Added foo 1.0.0\"\r\ngit push\r\n```\r\n\r\n### Merging upstream changes\r\n\r\nTo merge upstream changes from eprints/3.3 directly into ulcc-core/master, run the following:\r\n\r\n```\r\ngit clone git@github.com:eprintsug/ulcc-core.git\r\ngit submodule init\r\ngit submodule update\r\ngit remote add upstream https://github.com/eprints/eprints.git\r\ngit fetch upstream 3.3\r\ngit merge upstream/3.3\r\n# may need to fix conflicts and commit\r\ngit push\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}